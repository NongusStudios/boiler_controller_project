TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK


PROGRAM plc_controller
  VAR
    In_Start_Stop AT %IX100.2 : BOOL;
    In_Temp_Up AT %IX100.0 : BOOL;
    In_Temp_Down AT %IX100.1 : BOOL;
    In_Emergency_Stop AT %IX100.3 : BOOL;
    Out_Status_LED AT %QX100.7 : BOOL;
    Out_Display_LED0 AT %QX100.6 : BOOL;
    Out_Display_LED1 AT %QX100.5 : BOOL;
    Out_Display_LED2 AT %QX100.4 : BOOL;
    Out_Display_LED3 AT %QX100.3 : BOOL;
    Out_Display_LED4 AT %QX100.2 : BOOL;
    Out_Display_LED5 AT %QX100.1 : BOOL;
  END_VAR
  VAR
    Out_Servo_PWM_Chann : SINT := 1;
    Servo_Freq : REAL := 50.0;
    Servo_Angle : REAL := 0.0;
    Heating_On : BOOL := FALSE;
    Element_On : BOOL := FALSE;
    Emergency_Stop : BOOL;
    Global_Enable : BOOL;
    Display_Index : INT := 0;
    Temp_Setting : INT := 0;
    Temperature : REAL;
    MAX_TEMP_SETTING : INT := 10;
    R_TRIG0 : R_TRIG;
    CTUD0 : CTUD;
    TON0 : TON;
    R_TRIG1 : R_TRIG;
    CTUD1 : CTUD;
    PID0 : PID;
    TON1 : TON;
    R_TRIG2 : R_TRIG;
    R_TRIG3 : R_TRIG;
    _TMP_NOT30_OUT : BOOL;
    _TMP_NOT21_OUT : BOOL;
    _TMP_AND22_OUT : BOOL;
    _TMP_AND31_OUT : BOOL;
    R_TRIG4 : R_TRIG;
    _TMP_AND5_OUT : BOOL;
    _TMP_NOT133_OUT : BOOL;
    _TMP_AND132_OUT : BOOL;
    R_TRIG5 : R_TRIG;
    _TMP_XOR10_OUT : BOOL;
    _TMP_AND266_OUT : BOOL;
    _TMP_EQ137_OUT : BOOL;
    _TMP_EQ1_OUT : BOOL;
    _TMP_OR140_OUT : BOOL;
    _TMP_EQ7_OUT : BOOL;
    _TMP_EQ8_OUT : BOOL;
    _TMP_EQ2_OUT : BOOL;
    _TMP_OR20_OUT : BOOL;
    _TMP_EQ6_OUT : BOOL;
    _TMP_EQ29_OUT : BOOL;
    _TMP_EQ38_OUT : BOOL;
    _TMP_OR35_OUT : BOOL;
    _TMP_EQ41_OUT : BOOL;
    _TMP_EQ43_OUT : BOOL;
    _TMP_EQ45_OUT : BOOL;
    _TMP_OR46_OUT : BOOL;
    _TMP_EQ49_OUT : BOOL;
    _TMP_EQ51_OUT : BOOL;
    _TMP_EQ54_OUT : BOOL;
    _TMP_OR53_OUT : BOOL;
    _TMP_EQ59_OUT : BOOL;
    _TMP_EQ61_OUT : BOOL;
    _TMP_OR64_OUT : BOOL;
    _TMP_NOT163_OUT : BOOL;
    _TMP_AND159_OUT : BOOL;
    R_TRIG6 : R_TRIG;
    _TMP_NOT165_OUT : BOOL;
    _TMP_AND62_OUT : BOOL;
    R_TRIG7 : R_TRIG;
    _TMP_INT_TO_REAL168_OUT : REAL;
    _TMP_MUL166_OUT : REAL;
    _TMP_ADD169_OUT : REAL;
    _TMP_NOT176_OUT : BOOL;
    _TMP_AND261_OUT : BOOL;
    _TMP_MOVE177_ENO : BOOL;
    _TMP_MOVE177_OUT : INT;
    _TMP_SUB190_OUT : REAL;
    _TMP_DIV192_OUT : REAL;
    _TMP_INT_TO_REAL201_OUT : REAL;
    _TMP_MUL193_OUT : REAL;
    _TMP_REAL_TO_INT194_OUT : INT;
    _TMP_LIMIT198_OUT : INT;
    _TMP_MOVE47_ENO : BOOL;
    _TMP_MOVE47_OUT : INT;
    _TMP_MUL206_OUT : INT;
    _TMP_ADD37_OUT : INT;
    _TMP_INT_TO_REAL209_OUT : REAL;
    _TMP_LIMIT217_OUT : REAL;
    _TMP_REAL_TO_BOOL220_OUT : BOOL;
    _TMP_AND222_OUT : BOOL;
    _TMP_NOT68_OUT : BOOL;
    _TMP_NOT249_OUT : BOOL;
    _TMP_ADD242_OUT : REAL;
    _TMP_SUB243_OUT : REAL;
    _TMP_SEL248_OUT : REAL;
    _TMP_LIMIT252_OUT : REAL;
    _TMP_MOVE255_ENO : BOOL;
    _TMP_MOVE255_OUT : REAL;
    _TMP_XOR74_OUT : BOOL;
    _TMP_NOT258_OUT : BOOL;
    _TMP_NOT263_OUT : BOOL;
    _TMP_MOVE264_ENO : BOOL;
    _TMP_MOVE264_OUT : INT;
    _TMP_DIV232_OUT : REAL;
    _TMP_ADD234_OUT : REAL;
    _TMP_DIV236_OUT : REAL;
    _TMP_DIV239_OUT : REAL;
    _TMP_MUL240_OUT : REAL;
  END_VAR

  _TMP_NOT30_OUT := NOT(CTUD0.QU);
  _TMP_NOT21_OUT := NOT(Heating_On);
  _TMP_AND22_OUT := AND(In_Temp_Up, _TMP_NOT21_OUT);
  _TMP_AND31_OUT := AND(_TMP_NOT30_OUT, _TMP_AND22_OUT);
  R_TRIG4(CLK := _TMP_AND31_OUT);
  _TMP_AND5_OUT := AND(In_Temp_Down, _TMP_NOT21_OUT);
  _TMP_NOT133_OUT := NOT(CTUD0.QD);
  _TMP_AND132_OUT := AND(_TMP_AND5_OUT, _TMP_NOT133_OUT);
  R_TRIG5(CLK := _TMP_AND132_OUT);
  CTUD0(CU := R_TRIG4.Q, CD := R_TRIG5.Q, PV := MAX_TEMP_SETTING);
  Temp_Setting := CTUD0.CV;
  R_TRIG0(CLK := In_Start_Stop);
  _TMP_XOR10_OUT := XOR(R_TRIG0.Q, Heating_On);
  _TMP_AND266_OUT := AND(_TMP_XOR10_OUT, Global_Enable);
  Heating_On := _TMP_AND266_OUT;
  Out_Status_LED := Heating_On;
  _TMP_EQ137_OUT := EQ(Display_Index, 0);
  _TMP_EQ1_OUT := EQ(Display_Index, 1);
  _TMP_OR140_OUT := OR(_TMP_EQ137_OUT, _TMP_EQ1_OUT);
  Out_Display_LED0 := _TMP_OR140_OUT;
  _TMP_EQ7_OUT := EQ(Display_Index, 5);
  _TMP_EQ8_OUT := EQ(Display_Index, 6);
  _TMP_EQ2_OUT := EQ(Display_Index, 7);
  _TMP_OR20_OUT := OR(_TMP_EQ7_OUT, _TMP_EQ8_OUT, _TMP_EQ2_OUT);
  Out_Display_LED3 := _TMP_OR20_OUT;
  _TMP_EQ6_OUT := EQ(Display_Index, 1);
  _TMP_EQ29_OUT := EQ(Display_Index, 2);
  _TMP_EQ38_OUT := EQ(Display_Index, 3);
  _TMP_OR35_OUT := OR(_TMP_EQ6_OUT, _TMP_EQ29_OUT, _TMP_EQ38_OUT);
  Out_Display_LED1 := _TMP_OR35_OUT;
  _TMP_EQ41_OUT := EQ(Display_Index, 7);
  _TMP_EQ43_OUT := EQ(Display_Index, 8);
  _TMP_EQ45_OUT := EQ(Display_Index, 9);
  _TMP_OR46_OUT := OR(_TMP_EQ41_OUT, _TMP_EQ43_OUT, _TMP_EQ45_OUT);
  Out_Display_LED4 := _TMP_OR46_OUT;
  _TMP_EQ49_OUT := EQ(Display_Index, 3);
  _TMP_EQ51_OUT := EQ(Display_Index, 4);
  _TMP_EQ54_OUT := EQ(Display_Index, 5);
  _TMP_OR53_OUT := OR(_TMP_EQ49_OUT, _TMP_EQ51_OUT, _TMP_EQ54_OUT);
  Out_Display_LED2 := _TMP_OR53_OUT;
  _TMP_EQ59_OUT := EQ(Display_Index, 9);
  _TMP_EQ61_OUT := EQ(Display_Index, 10);
  _TMP_OR64_OUT := OR(_TMP_EQ59_OUT, _TMP_EQ61_OUT);
  Out_Display_LED5 := _TMP_OR64_OUT;
  _TMP_NOT163_OUT := NOT(R_TRIG1.Q);
  TON0(IN := _TMP_NOT163_OUT, PT := T#20ms);
  R_TRIG1(CLK := TON0.Q);
  _TMP_AND159_OUT := AND(R_TRIG1.Q, Element_On);
  R_TRIG6(CLK := _TMP_AND159_OUT);
  _TMP_NOT165_OUT := NOT(Element_On);
  _TMP_AND62_OUT := AND(_TMP_NOT165_OUT, R_TRIG1.Q);
  R_TRIG7(CLK := _TMP_AND62_OUT);
  CTUD1(CU := R_TRIG6.Q, CD := R_TRIG7.Q, PV := 1000);
  _TMP_INT_TO_REAL168_OUT := INT_TO_REAL(CTUD1.CV);
  _TMP_MUL166_OUT := MUL(_TMP_INT_TO_REAL168_OUT, 0.1);
  _TMP_ADD169_OUT := ADD(_TMP_MUL166_OUT, 60.0);
  Temperature := _TMP_ADD169_OUT;
  _TMP_NOT176_OUT := NOT(Heating_On);
  _TMP_AND261_OUT := AND(Global_Enable, _TMP_NOT176_OUT);
  _TMP_MOVE177_OUT := MOVE(EN := _TMP_AND261_OUT, IN := Temp_Setting, ENO => _TMP_MOVE177_ENO);
  IF _TMP_MOVE177_ENO THEN
      Display_Index := _TMP_MOVE177_OUT;
  END_IF;
  _TMP_SUB190_OUT := SUB(Temperature, 80.0);
  _TMP_DIV192_OUT := DIV(_TMP_SUB190_OUT, 100.0);
  _TMP_INT_TO_REAL201_OUT := INT_TO_REAL(MAX_TEMP_SETTING);
  _TMP_MUL193_OUT := MUL(_TMP_DIV192_OUT, _TMP_INT_TO_REAL201_OUT);
  _TMP_REAL_TO_INT194_OUT := REAL_TO_INT(_TMP_MUL193_OUT);
  _TMP_LIMIT198_OUT := LIMIT(0, _TMP_REAL_TO_INT194_OUT, MAX_TEMP_SETTING);
  _TMP_MOVE47_OUT := MOVE(EN := Heating_On, IN := _TMP_LIMIT198_OUT, ENO => _TMP_MOVE47_ENO);
  IF _TMP_MOVE47_ENO THEN
      Display_Index := _TMP_MOVE47_OUT;
  END_IF;
  _TMP_MUL206_OUT := MUL(Temp_Setting, 10);
  _TMP_ADD37_OUT := ADD(_TMP_MUL206_OUT, 80);
  _TMP_INT_TO_REAL209_OUT := INT_TO_REAL(_TMP_ADD37_OUT);
  PID0(AUTO := TRUE, PV := Temperature, SP := _TMP_INT_TO_REAL209_OUT, KP := -0.5, TR := 1000.0, TD := 0.5, CYCLE := T#20ms);
  _TMP_LIMIT217_OUT := LIMIT(0.0, PID0.XOUT, 1.0);
  _TMP_REAL_TO_BOOL220_OUT := REAL_TO_BOOL(_TMP_LIMIT217_OUT);
  _TMP_AND222_OUT := AND(Heating_On, _TMP_REAL_TO_BOOL220_OUT);
  Element_On := _TMP_AND222_OUT;
  _TMP_NOT68_OUT := NOT(R_TRIG2.Q);
  TON1(IN := _TMP_NOT68_OUT, PT := T#100ms);
  R_TRIG2(CLK := TON1.Q);
  _TMP_NOT249_OUT := NOT(Heating_On);
  _TMP_ADD242_OUT := ADD(Servo_Angle, 1.8);
  _TMP_SUB243_OUT := SUB(Servo_Angle, 1.8);
  _TMP_SEL248_OUT := SEL(_TMP_NOT249_OUT, _TMP_ADD242_OUT, _TMP_SUB243_OUT);
  _TMP_LIMIT252_OUT := LIMIT(0.0, _TMP_SEL248_OUT, 144.0);
  _TMP_MOVE255_OUT := MOVE(EN := R_TRIG2.Q, IN := _TMP_LIMIT252_OUT, ENO => _TMP_MOVE255_ENO);
  IF _TMP_MOVE255_ENO THEN
      Servo_Angle := _TMP_MOVE255_OUT;
  END_IF;
  R_TRIG3(CLK := In_Emergency_Stop);
  _TMP_XOR74_OUT := XOR(R_TRIG3.Q, Emergency_Stop);
  Emergency_Stop := _TMP_XOR74_OUT;
  _TMP_NOT258_OUT := NOT(Emergency_Stop);
  Global_Enable := _TMP_NOT258_OUT;
  _TMP_NOT263_OUT := NOT(Global_Enable);
  _TMP_MOVE264_OUT := MOVE(EN := _TMP_NOT263_OUT, IN := -1, ENO => _TMP_MOVE264_ENO);
  IF _TMP_MOVE264_ENO THEN
      Display_Index := _TMP_MOVE264_OUT;
  END_IF;
  _TMP_DIV232_OUT := DIV(Servo_Angle, 90.0);
  _TMP_ADD234_OUT := ADD(_TMP_DIV232_OUT, 0.5);
  _TMP_DIV236_OUT := DIV(1000.0, Servo_Freq);
  _TMP_DIV239_OUT := DIV(_TMP_ADD234_OUT, _TMP_DIV236_OUT);
  _TMP_MUL240_OUT := MUL(_TMP_DIV239_OUT, 100.0);
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : plc_controller;
  END_RESOURCE
END_CONFIGURATION
